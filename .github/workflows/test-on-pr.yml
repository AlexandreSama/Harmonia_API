name: Run integration and unit tests on PR from test-all to develop

on:
  pull_request:
    branches:
      - test
    types: [opened, synchronize, reopened]

jobs:
  test:
    if: github.head_ref == 'test-all'
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: harmonia
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Wait for MySQL to be ready
        run: |
          echo "⏳ Waiting for MySQL..."
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -u testuser -ptestpass --silent; then
              echo "✅ MySQL is up!"
              break
            fi
            echo "Still waiting for MySQL... ($i)"
            sleep 2
          done

      - name: Make mvnw executable
        run: chmod +x ./mvnw

      - name: Run only non-Selenium tests
        run: ./mvnw test -Dtest=!**/*Selenium*Test
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/harmonia
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: root

  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=AlexandreSama_Harmonia_API